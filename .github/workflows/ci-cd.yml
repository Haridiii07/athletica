name: Athletica CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Run tests
      run: flutter test
    
    - name: Run integration tests
      run: flutter test integration_test/
    
    - name: Analyze code
      run: flutter analyze
    
    - name: Check formatting
      run: dart format --set-exit-if-changed .

  build-android:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Build APK
      run: flutter build apk --release
    
    - name: Build App Bundle
      run: flutter build appbundle --release
    
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: app-release.apk
        path: build/app/outputs/flutter-apk/app-release.apk
    
    - name: Upload App Bundle
      uses: actions/upload-artifact@v3
      with:
        name: app-release.aab
        path: build/app/outputs/bundle/release/app-release.aab

  build-web:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Build Web
      run: flutter build web --release
    
    - name: Upload Web Build
      uses: actions/upload-artifact@v3
      with:
        name: web-build
        path: build/web/

  build-ios:
    runs-on: macos-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Build iOS
      run: flutter build ios --release --no-codesign
    
    - name: Upload iOS Build
      uses: actions/upload-artifact@v3
      with:
        name: ios-build
        path: build/ios/

  deploy-android:
    runs-on: ubuntu-latest
    needs: build-android
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Download APK
      uses: actions/download-artifact@v3
      with:
        name: app-release.apk
    
    - name: Deploy to Play Store
      # Note: This would require Play Store credentials
      run: echo "Deploy to Play Store (requires setup)"

  deploy-web:
    runs-on: ubuntu-latest
    needs: build-web
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Download Web Build
      uses: actions/download-artifact@v3
      with:
        name: web-build
    
    - name: Deploy to Firebase Hosting
      # Note: This would require Firebase credentials
      run: echo "Deploy to Firebase Hosting (requires setup)"

  deploy-ios:
    runs-on: macos-latest
    needs: build-ios
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Download iOS Build
      uses: actions/download-artifact@v3
      with:
        name: ios-build
    
    - name: Deploy to App Store
      # Note: This would require App Store credentials
      run: echo "Deploy to App Store (requires setup)"

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan
      run: |
        # Install security scanning tools
        npm install -g @snyk/cli
        
        # Scan for vulnerabilities
        snyk test --severity-threshold=high
        
        # Scan for license issues
        snyk test --severity-threshold=medium

  performance-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Run performance tests
      run: |
        # Run performance tests
        flutter test test/performance_test.dart
        
        # Generate performance report
        flutter test --coverage
        
        # Upload coverage report
        bash <(curl -s https://codecov.io/bash)
